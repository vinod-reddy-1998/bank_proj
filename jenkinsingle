pipeline {
    agent any
    environment {
        USER = 'ubuntu' // Adjust this to your actual username if different
        SERVER_IP = '54.210.24.130' // Replace with your server's IP address
    }

    stages {
        stage('Checkout Code from GitHub') { 
            steps {
                script {
                    git url: 'https://github.com/vinod-reddy-1998/bank_proj/', branch: 'master'
                    echo 'Checked out code from GitHub'
                }
            }
        }

        stage('Compile Code') {
            steps {
                script {
                    echo 'Starting compilation'
                    sh 'mvn compile'
                }
            }
        }

        stage('Run Unit Tests') {
            steps {
                script {
                    echo 'Running unit tests'
                    sh 'mvn test'
                }
            }
        }

        stage('Code Quality Check') {
            steps {
                script {
                    echo 'Checking code quality'
                    sh 'mvn checkstyle:checkstyle'
                }
            }
        }

        stage('Package Application') {
            steps {
                script {
                    echo 'Packaging the application'
                    sh 'mvn package'
                }
            }
        }

        stage('Configure Server with Ansible') {
            steps {
                script {
                    // Ensure the key.pem file has the correct permissions
                    sh 'chmod 400 /var/lib/jenkins/workspace/finance/key.pem'
                    echo "Configuring server at IP: ${SERVER_IP}"
                    sleep(60) // Wait for any necessary time
                    sh "ansible-playbook -i '${SERVER_IP},' server_setup.yml --private-key ${WORKSPACE}/key.pem --user ${USER} -e 'ansible_ssh_common_args=\"-o StrictHostKeyChecking=no\"'"
                }
            }
        }

        stage('Deploy Application to Server') {
            steps {
                script {
                    echo "Deploying application to server"
                    sh """
                        scp -i "${WORKSPACE}/key.pem" target/banking-0.0.1-SNAPSHOT.jar \
                        ${USER}@${SERVER_IP}:./
                    """
                    sh """
                        ssh -i "${WORKSPACE}/key.pem" ${USER}@${SERVER_IP} \
                        'nohup java -jar ./banking-0.0.1-SNAPSHOT.jar &'
                    """
                }
            }
        }

        stage('Run Smoke Tests on Server') {
            steps {
                script {
                    echo 'Running smoke tests on the server'
                    sh "curl http://${SERVER_IP}:8091/health"
                }
            }
        }

        stage('Configure Monitoring with Prometheus and Grafana') {
            steps {
                script {
                    echo 'Deploying Prometheus and Grafana using Docker Compose'
                    dir('monitoring') {
                        sh 'docker-compose up -d'
                    }
                }
            }
        }

        stage('Reload Prometheus Config') {
            steps {
                script {
                    echo 'Reloading Prometheus configuration'
                    sh "curl -X POST http://localhost:9090/-/reload"
                }
            }
        }
    }

    post {
        always {
            script {
                echo 'Cleaning up resources'
                // Optional: Add cleanup commands if necessary
            }
        }
    }
}
